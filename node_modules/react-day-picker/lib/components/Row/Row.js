import * as React from 'react';
import { getUnixTime } from 'date-fns';
import { WeekNumber } from '../../components';
import { useDayPicker } from '../../hooks';
import { UIElement as UI } from '../../types';
/**
 * Render a row in the calendar, with the days and optionally the week number.
 */
export function Row(props) {
    var weekNumber = props.weekNumber, dates = props.dates;
    var _a = useDayPicker(), styles = _a.styles, classNames = _a.classNames, showWeekNumber = _a.showWeekNumber, Day = _a.components.Day;
    var weekNumberCell;
    if (showWeekNumber) {
        weekNumberCell = (React.createElement("th", { className: classNames[UI.RowHead], style: styles === null || styles === void 0 ? void 0 : styles[UI.RowHead] },
            React.createElement(WeekNumber, { number: weekNumber, dates: dates })));
    }
    return (React.createElement("tr", { className: classNames[UI.Row], style: styles === null || styles === void 0 ? void 0 : styles[UI.Row] },
        weekNumberCell,
        dates.map(function (date) { return (React.createElement("td", { className: classNames[UI.Cell], style: styles === null || styles === void 0 ? void 0 : styles[UI.Cell], key: getUnixTime(date) },
            React.createElement(Day, { displayMonth: props.displayMonth, date: date }))); })));
}
//# sourceMappingURL=Row.js.map