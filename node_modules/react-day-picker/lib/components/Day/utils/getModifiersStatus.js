import { getModifiersFromContext } from './getModifiersFromContext';
import { isMatch } from './isMatch';
var reduceCallback = function (day, matchers, displayMonth, context) { return function (previousValue, key) {
    var matcher = matchers[key];
    if (isMatch(day, matcher, displayMonth, context)) {
        previousValue.push(key);
    }
    return previousValue;
}; };
/**
 * Return the status of the modifiers for the given day,
 */
export function getModifiersStatus(day, displayMonth, context) {
    var modifierMatchers = getModifiersFromContext(context);
    var modifiersList = Object.keys(modifierMatchers).reduce(reduceCallback(day, modifierMatchers, displayMonth, context), []);
    var modifiers = {};
    modifiersList.forEach(function (modifier) { return (modifiers[modifier] = true); });
    return modifiers;
}
//# sourceMappingURL=getModifiersStatus.js.map