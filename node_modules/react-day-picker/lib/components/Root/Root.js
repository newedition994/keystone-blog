var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import * as React from 'react';
import { Caption, Table } from '../../components';
import { useDayPicker, useNavigation } from '../../hooks';
import { UIElement as UI } from '../../types';
/**
 * Render the container with the months and their captions. The number of months
 * rendered depends by the `numberOfMonths` prop.
 */
export function Root(props) {
    var className = props.className, style = props.style;
    var _a = useDayPicker(), dir = _a.dir, classNames = _a.classNames, styles = _a.styles, numberOfMonths = _a.numberOfMonths;
    var displayMonths = useNavigation().displayMonths;
    var rootClassNames = [classNames[UI.Root]];
    if (numberOfMonths > 1) {
        rootClassNames.push(classNames[UI.RootMultipleMonths]);
    }
    if (className)
        rootClassNames.concat(className.split(' '));
    var renderMonth = function (displayMonth, displayIndex) {
        var _a;
        var className = [classNames[UI.Month]];
        // When numberOfMonths > 1, keep track of the position of this month between
        // the other â€“ so that we can style them better and give a different layout.
        var isFirst = numberOfMonths > 1 && displayIndex === 0;
        var isLast = numberOfMonths > 1 && displayIndex === displayMonths.length - 1;
        if (dir === 'rtl')
            _a = [isFirst, isLast], isLast = _a[0], isFirst = _a[1];
        var isBetween = numberOfMonths > 1 && !isFirst && !isLast;
        if (isFirst)
            className.push(classNames[UI.CaptionFirst]);
        if (isLast)
            className.push(classNames[UI.CaptionLast]);
        if (isBetween)
            className.push(classNames[UI.CaptionBetween]);
        return (React.createElement("div", { className: className.join(' '), key: displayIndex },
            React.createElement(Caption, { displayMonth: displayMonth, displayIndex: displayIndex, isFirst: isFirst, isLast: isLast, isBetween: isBetween }),
            React.createElement(Table, { displayMonth: displayMonth })));
    };
    return (React.createElement("div", { className: rootClassNames.join(' '), style: __assign(__assign({}, styles === null || styles === void 0 ? void 0 : styles[UI.Root]), style), dir: dir },
        React.createElement("div", { className: classNames[UI.Months], style: styles === null || styles === void 0 ? void 0 : styles[UI.Months] }, displayMonths.map(renderMonth))));
}
//# sourceMappingURL=Root.js.map